"""Initial migration

Revision ID: 38e7a2ad31a4
Revises: 
Create Date: 2025-08-10 17:27:05.832354

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '38e7a2ad31a4'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('complaints', schema=None) as batch_op:
        batch_op.add_column(sa.Column('complaint_file_url', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('complaint_file_name', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('reference_code', sa.BigInteger(), server_default=sa.text("nextval('complaint_code_seq')"), nullable=True))
        batch_op.drop_column('complaint_file')

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.add_column(sa.Column('complaint_id', sa.UUID(), nullable=True))
        batch_op.add_column(sa.Column('suggestion_id', sa.UUID(), nullable=True))
        batch_op.create_foreign_key(None, 'complaints', ['complaint_id'], ['complaint_id'])
        batch_op.create_foreign_key(None, 'suggestions', ['suggestion_id'], ['suggestion_id'])

    with op.batch_alter_table('suggestions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('reference_code', sa.BigInteger(), server_default=sa.text("nextval('suggestion_code_seq')"), nullable=True))
        batch_op.add_column(sa.Column('suggestion_file_url', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('suggestion_file_name', sa.String(length=255), nullable=True))
        batch_op.add_column(sa.Column('suggestion_status', sa.Enum('reviewed', 'unreviewed', name='suggestionstatus'), nullable=False))
        batch_op.drop_column('suggestion_file')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('suggestions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('suggestion_file', postgresql.BYTEA(), autoincrement=False, nullable=True))
        batch_op.drop_column('suggestion_status')
        batch_op.drop_column('suggestion_file_name')
        batch_op.drop_column('suggestion_file_url')
        batch_op.drop_column('reference_code')

    with op.batch_alter_table('notifications', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('suggestion_id')
        batch_op.drop_column('complaint_id')

    with op.batch_alter_table('complaints', schema=None) as batch_op:
        batch_op.add_column(sa.Column('complaint_file', postgresql.BYTEA(), autoincrement=False, nullable=True))
        batch_op.drop_column('reference_code')
        batch_op.drop_column('complaint_file_name')
        batch_op.drop_column('complaint_file_url')

    # ### end Alembic commands ###
