"""create all tables clean

Revision ID: 0ea061f7b614
Revises: 7ed00a2ea195
Create Date: 2025-08-18 14:18:34.221817

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '0ea061f7b614'
down_revision = '7ed00a2ea195'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('users_id', sa.UUID(), nullable=False),
    sa.Column('users_name', sa.Text(), nullable=False),
    sa.Column('users_email', sa.Text(), nullable=False),
    sa.Column('users_password', sa.String(length=200), nullable=False),
    sa.Column('users_role', postgresql.ENUM('student', 'admin', name='userrole'), nullable=False),
    sa.Column('users_created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('users_id'),
    sa.UniqueConstraint('users_email')
    )
    op.create_table('chat_sessions',
    sa.Column('sessions_id', sa.UUID(), nullable=False),
    sa.Column('users_id', sa.UUID(), nullable=True),
    sa.Column('session_created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('session_ended_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('session_title', sa.Text(), nullable=False),
    sa.Column('session_status', postgresql.ENUM('open', 'close', name='sessionstatus'), nullable=False),
    sa.ForeignKeyConstraint(['users_id'], ['users.users_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('sessions_id')
    )
    op.create_table('complaints',
    sa.Column('complaint_id', sa.UUID(), nullable=False),
    sa.Column('sender_id', sa.UUID(), nullable=True),
    sa.Column('complaint_type', postgresql.ENUM('academic', 'activities', 'administrative', 'IT', name='complainttype'), nullable=False),
    sa.Column('complaint_dep', postgresql.ENUM('public', 'private', name='complaintdep'), nullable=False),
    sa.Column('complaint_status', postgresql.ENUM('under_checking', 'under_review', 'in_progress', 'done', name='complaintstatus'), nullable=False),
    sa.Column('complaint_title', sa.String(length=100), nullable=True),
    sa.Column('complaint_message', sa.Text(), nullable=False),
    sa.Column('complaint_file_url', sa.String(length=255), nullable=True),
    sa.Column('complaint_file_name', sa.String(length=255), nullable=True),
    sa.Column('complaint_created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('responder_id', sa.UUID(), nullable=True),
    sa.Column('response_message', sa.Text(), nullable=True),
    sa.Column('response_created_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.Column('reference_code', sa.BigInteger(), server_default=sa.text("nextval('complaint_code_seq')"), nullable=True),
    sa.ForeignKeyConstraint(['responder_id'], ['users.users_id'], ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.users_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('complaint_id')
    )
    op.create_table('suggestions',
    sa.Column('suggestion_id', sa.UUID(), nullable=False),
    sa.Column('users_id', sa.UUID(), nullable=True),
    sa.Column('reference_code', sa.BigInteger(), server_default=sa.text("nextval('suggestion_code_seq')"), nullable=True),
    sa.Column('suggestion_type', postgresql.ENUM('academic', 'activities', 'administrative', 'IT', name='complainttype'), nullable=False),
    sa.Column('suggestion_dep', postgresql.ENUM('public', 'private', name='complaintdep'), nullable=False),
    sa.Column('suggestion_title', sa.String(length=100), nullable=True),
    sa.Column('suggestion_message', sa.Text(), nullable=False),
    sa.Column('suggestion_file_url', sa.String(length=255), nullable=True),
    sa.Column('suggestion_file_name', sa.String(length=255), nullable=True),
    sa.Column('suggestion_created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('suggestion_status', sa.Enum('reviewed', 'unreviewed', name='suggestionstatus'), nullable=False),
    sa.ForeignKeyConstraint(['users_id'], ['users.users_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('suggestion_id')
    )
    op.create_table('chat_messages',
    sa.Column('chat_id', sa.UUID(), nullable=False),
    sa.Column('session_id', sa.UUID(), nullable=True),
    sa.Column('sender', postgresql.ENUM('bot', 'user', name='sendertype'), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['chat_sessions.sessions_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('chat_id')
    )
    op.create_table('notifications',
    sa.Column('notification_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('notifications_message', sa.Text(), nullable=False),
    sa.Column('notification_created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('notification_is_read', sa.Boolean(), nullable=True),
    sa.Column('complaint_id', sa.UUID(), nullable=True),
    sa.Column('suggestion_id', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['complaint_id'], ['complaints.complaint_id'], ),
    sa.ForeignKeyConstraint(['suggestion_id'], ['suggestions.suggestion_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.users_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('notification_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('notifications')
    op.drop_table('chat_messages')
    op.drop_table('suggestions')
    op.drop_table('complaints')
    op.drop_table('chat_sessions')
    op.drop_table('users')
    # ### end Alembic commands ###
